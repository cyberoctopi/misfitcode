
* Sections
** Joy Of Clojure
   [[file:joyofclojurenotes.org::*Joy%20of%20Clojure][Joy of Clojure Notes]]

* Links
** Collections
   [[https://clojure.org/guides/learn/hashed_colls][Hashed Collections (clojure.org)]]
   [[https://purelyfunctional.tv/guide/clojure-collections/][Eric Normand on Mastering Collections]]
** Specs
   [[http://gigasquidsoftware.com/blog/2016/05/29/one-fish-spec-fish/][One Fish, One Spec]]

** Arbitrary
   [[https://dzone.com/articles/notes-on-debugging-clojure-code][Debugging Clojure]]
* Notes
** Re-frame
** Sequences -> [Last Reviewed <2018-06-22 Fri 00:00>]
   [[file:~/Vega/misfitcode/src/misfitcode/seqstudy.clj::;;%20Clojure%20Standard%20Library%20chapter%209%20&%2010][Sequence Study]] C-c C-o
*** [Sequence Generators]
**** collections
     calling seq on a collection or through some sor of seq processing function
***** vector
***** hash-set
***** hash-map
***** PersistentQueue
***** list
**** (custom) usually lazy-seq
     sequence is created over a specialized view, i/o or nested structure
***** nested collection -> tree-seq
***** xml/parsing -> xml-seq
***** files -> file-seq
***** JDBC Results -> resultset-seq
***** BufferedReader -> line-seq
***** regexes -> re-seq
**** on demand
     data in the sequence doesn't exist, it's generated as requested
***** range
***** iterate
***** cycle
***** repeat
**** styling
***** reversed -> rseq (CSL book, ch9.1)
***** blocking -> seque
**** abstractions
     collections offer access through an abstraction?? 'java.util.ArrayList'? COME BACK TO THIS!!!
***** enumeration-seq
***** iterator-seq
****** ArrayList
****** HashSet
***** Another seq

* Papers
“Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I”
